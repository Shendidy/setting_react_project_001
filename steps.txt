1- CLI: npm init

2- CLI: npm i webpack webpack-cli -D (NB, you might need to add the following 2 lines before being able to add . in git repository
  a- $ git config --global core.autocrlf false
  b- $ git config --global core.safecrlf false
)

3- Create the src folder

4- Create index.js in src folder

5- Fix package.json to replace script "test" with this:
      "scripts": {
        "start": "webpack --mode development",
        "build": "webpack --mode production"
      },

NOTE: if you type in the CLI now "npm run start" it will create the folder dist, and a file inside it main.js. you don't need to do so, but it's worth knowing it!

6- CLI: npm install react react-dom -S  (-S to save it for all project environments, not just the dev. NB, you can use 'i' instead of 'install'!)

7- CLI: npm i babel-core babel-loader babel-preset-env babel-preset-react -D
NB, babel is the dependency responsible for transpiling any ES6 to ES5 since not all browsers understand ES6 yet. "-D" is to tell our application that babel is only needed for the development side of our app, not for the production side.

8- Create file webpack.config.js in the root folder and fill it with:

      module.exports = {
        module: {
          rules: [
            {
              test: /\.js$/,
              exclude: /node_modules/,
              use: {
                loader: "babel_loader"
              }
            }
          ]
        }
      };

9- Create a .bablerc file in the root folder and fill it with:

      {
        "presets": ["env", "react"]
      }

10- Edit index.js in src folder to be:

      import React from "react";
      import ReactDom from "react-dom"

      const Index = () => {
        return <div>Hello World!</div>
      };

      ReactDom.render(<Index />, document.getElementById('index'));

  NB, both lines importing React and ReactDom are for ensuring our application can generate and translate jsx into html. Index const is a component to include any jsx that shall be translated to html that we want to render into our pages. and finally, the translation of the last line is: use render function from ReactDom that we imported above to place component Index above (or can be stored in another file given that we also import that file, and that it has the export default set properly) and add it to our document in the element with id 'index' (we can name the id of that element anything we want, I believe it's usually names 'root'!)

11- Create index.html file in src folder and fill it with:

      <!DOCTYPE html>
      <html lang="en" dir="ltr">
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale-1.0">
          <meta http-http-equiv="X-UA-Compatible" content="ie=edge">
          <title>React tutorial</title>
        </head>
        <body>
          <div id="index"></div>
        </body>
      </html>
